@page "/"
@inject IViagemDataClient _viagemDataClient;
<PageTitle>Index</PageTitle>

Welcome to your new app.


<SurveyPrompt Title="How is Blazor working for you?" />

@if (ViagensComFuncionarios != null)
{
    @foreach (var item in ViagensComFuncionarios)
    {
        <ExibirViagemAberta Viagem="@item.Item1" Funcionario="@item.Item2"></ExibirViagemAberta>
    }
}


@code {

    public IEnumerable<ViagemDTO> ViagensDTO { get; set; }

    public IEnumerable<Tuple<ViagemDTO, FuncionarioDTO>> ViagensComFuncionarios { get; set; }

    public string MessageError { get; set; }
       

    protected override async Task OnInitializedAsync()
    {
        ViagensDTO = await GetViagensDTO();
        ViagensComFuncionarios = await VincularViagensComFuncionarios();
    }

    private async Task<IEnumerable<ViagemDTO>?> GetViagensDTO()
    {
        try
        {
            return await _viagemDataClient.GetViagensDTO();
        }
        catch (Exception ex)
        {
            MessageError = ex.Message;
        }

        return default;
    }

    private async Task<IEnumerable<Tuple<ViagemDTO, FuncionarioDTO>>> VincularViagensComFuncionarios()
    {
        try
        {
            List<Tuple<ViagemDTO, FuncionarioDTO>> viagensComFuncionarios = new();
            FuncionarioDTO funcionarioDTO;
            foreach (var viagemDTO in ViagensDTO)
            {
                funcionarioDTO = await _viagemDataClient.GetFuncionarioDTO(viagemDTO.CPF_Funcionario);
                viagensComFuncionarios.Add(new Tuple<ViagemDTO, FuncionarioDTO>(viagemDTO, funcionarioDTO));
            }

            return viagensComFuncionarios;
        }
        catch (Exception ex)
        {
            MessageError = ex.Message;
        }
        return default;
    }
}